{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","_ref","todo","toggleTodo","id","task","completed","react_default","a","createElement","className","type","onChange","TodoList","todos","map","key","KEY","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","todoTaskRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","Fragment","ref","placeholder","onClick","current","value","prevTodo","concat","toConsumableArray","uuidv4","newTodos","filter","find","ReactDOM","render","StrictMode","App_App","document","getElementById"],"mappings":"uKAEO,SAASA,EAATC,GAAsC,IAAnBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,WACrBC,EAAuBF,EAAvBE,GAAIC,EAAmBH,EAAnBG,KAAmBH,EAAbI,UAIjB,OACIC,EAAAC,EAAAC,cAAA,UAAKJ,EAAL,IAAWE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,WAAWC,KAAK,WAAWC,SAJlC,WACrBT,EAAWC,OCHZ,SAASS,EAATZ,GAAuC,IAApBa,EAAoBb,EAApBa,MAAOX,EAAaF,EAAbE,WAC7B,OACII,EAAAC,EAAAC,cAAA,UACKK,EAAMC,IAAI,SAACb,GAAD,OACZK,EAAAC,EAAAC,cAACT,EAAD,CAAWgB,IAAKd,EAAKE,GAAIF,KAAMA,EAAMC,WAAYA,mBCDtDc,SAAM,iBAEL,SAASC,IAAK,IAAAC,EACSC,mBAAS,IADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACVL,EADUO,EAAA,GACHG,EADGH,EAAA,GAEXI,EAAcC,mBAEnBC,oBAAU,WACP,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQf,IACjDW,GACCJ,EAASI,IAEd,IAEHD,oBAAU,WACNI,aAAaE,QAAQhB,EAAKY,KAAKK,UAAUpB,KAC1C,CAACA,IA2BJ,OAAOP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACH5B,EAAAC,EAAAC,cAAA,uCAEAF,EAAAC,EAAAC,cAAA,SAAO2B,IAAKX,EAAad,KAAK,OAAO0B,YAAY,aACjD9B,EAAAC,EAAAC,cAAA,UAAQ6B,QAtBU,WAClB,IAAMjC,EAAOoB,EAAYc,QAAQC,MACpB,KAATnC,IAEAmB,EAAS,SAACiB,GACN,SAAAC,OAAApB,OAAAqB,EAAA,EAAArB,CAAWmB,GAAX,CAAqB,CAACrC,GAAIwC,cAAUvC,OAAMC,WAAW,OAI7DmB,EAAYc,QAAQC,MAAQ,QAa5B,UAEAjC,EAAAC,EAAAC,cAAA,UAAQ6B,QAZS,SAAClC,GAClB,IAAMyC,EAAW/B,EAAMgC,OAAO,SAAC5C,GAAD,OAAWA,EAAKI,YAC9CkB,EAASqB,KAUT,sBACJtC,EAAAC,EAAAC,cAACI,EAAD,CAAUC,MAAOA,EAAOX,WAhCL,SAACC,GAChB,IAAMyC,EAAQvB,OAAAqB,EAAA,EAAArB,CAAOR,GACfZ,EAAO2C,EAASE,KAAK,SAAC7C,GAAD,OAAUA,EAAKE,KAAOA,IACjDF,EAAKI,WAAaJ,EAAKI,UACvBkB,EAASqB,MA8BbtC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UA5BL,2CCxBjBsC,IAASC,OACP1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,WAAP,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.759ec820.chunk.js","sourcesContent":["import React from 'react'\n\nexport function TodoItem({todo, toggleTodo}) {\n    const {id, task, completed} = todo\n    const handdleTodoClick = () =>{\n        toggleTodo(id)\n    }\n    return (\n        <li>{task} <input className=\"checkbox\" type=\"checkbox\" onChange={handdleTodoClick}/> \n        </li>\n    )\n}\n","import React from 'react'\nimport {TodoItem} from './TodoItem'\nexport function TodoList({todos, toggleTodo}) {\n    return (            \n        <ul>\n            {todos.map((todo) => \n           <TodoItem  key={todo.id} todo={todo} toggleTodo={toggleTodo}/>\n            )}\n        </ul>\n        )\n}\n","import React, {useState, useRef, useEffect} from 'react'\nimport {TodoList} from './components/TodoList'\nimport {v4 as uuidv4} from 'uuid'\nimport './App.css';\n\nconst KEY = \"todoApp.todos\";\n\nexport function App(){\n    const [todos, setTodos] = useState([])\n    const todoTaskRef = useRef()\n    \n     useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(KEY))\n        if(storedTodos){\n            setTodos(storedTodos)\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem(KEY, JSON.stringify(todos))\n    }, [todos]);\n\n    const toggleTodo = (id) =>{\n        const newTodos = [...todos];\n        const todo = newTodos.find((todo) => todo.id === id)\n        todo.completed = !todo.completed;\n        setTodos(newTodos)\n    }\n    const message = `<> with ‚ô• by Basti√°n Escribano` \n    const handleTodoAdd = () => {\n        const task = todoTaskRef.current.value;\n        if (task === '') return;\n        else{\n            setTodos((prevTodo) =>{\n                return [...prevTodo, {id: uuidv4(), task, completed: false}]\n            })\n        }\n\n        todoTaskRef.current.value = null;\n    }\n    \n    const handdleClear = (id) =>{\n        const newTodos = todos.filter((todo) => !todo.completed)\n        setTodos(newTodos);\n\n    }\n    \n    return(<>\n        <h2>To do with Locale Storage</h2>\n\n        <input ref={todoTaskRef} type=\"text\" placeholder=\"New task\" />\n        <button onClick={handleTodoAdd}>\n‚ûï</button>\n        <button onClick={handdleClear}>üóëÔ∏è</button>\n    <TodoList todos={todos} toggleTodo={toggleTodo}/>\n\n    <footer className=\"footer\">{message}</footer>\n       </>)}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}